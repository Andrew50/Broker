import{D as $,y as _,T as y,h as S,d as E,U as I,R as w,V as b,I as p,W as C,X as O,Y as x,Z as R,_ as U,$ as V,a0 as j,a1 as B}from"./scheduler.VY-UclLW.js";const u=new Set;let d;function W(){d={r:0,c:[],p:d}}function X(){d.r||$(d.c),d=d.p}function D(t,e){t&&t.i&&(u.delete(t),t.i(e))}function Y(t,e,n,a){if(t&&t.o){if(u.has(t))return;u.add(t),d.c.push(()=>{u.delete(t),a&&(n&&t.d(1),a())}),t.o(e)}else a&&a()}function Z(t){t&&t.c()}function z(t,e){t&&t.l(e)}function L(t,e,n){const{fragment:a,after_update:i}=t.$$;a&&a.m(e,n),p(()=>{const f=t.$$.on_mount.map(R).filter(w);t.$$.on_destroy?t.$$.on_destroy.push(...f):$(f),t.$$.on_mount=[]}),i.forEach(p)}function M(t,e){const n=t.$$;n.fragment!==null&&(C(n.after_update),$(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function N(t,e){t.$$.dirty[0]===-1&&(U.push(t),V(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function A(t,e,n,a,i,f,c=null,v=[-1]){const o=O;x(t);const s=t.$$={fragment:null,ctx:[],props:f,update:_,not_equal:i,bound:y(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(o?o.$$.context:[])),callbacks:y(),dirty:v,skip_bound:!1,root:e.target||o.$$.root};c&&c(s.root);let l=!1;if(s.ctx=n?n(t,e.props||{},(r,h,...g)=>{const m=g.length?g[0]:h;return s.ctx&&i(s.ctx[r],s.ctx[r]=m)&&(!s.skip_bound&&s.bound[r]&&s.bound[r](m),l&&N(t,r)),h}):[],s.update(),l=!0,$(s.before_update),s.fragment=a?a(s.ctx):!1,e.target){if(e.hydrate){j();const r=S(e.target);s.fragment&&s.fragment.l(r),r.forEach(E)}else s.fragment&&s.fragment.c();e.intro&&D(t.$$.fragment),L(t,e.target,e.anchor),B(),I()}x(o)}class F{$$=void 0;$$set=void 0;$destroy(){M(this,1),this.$destroy=_}$on(e,n){if(!w(n))return _;const a=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return a.push(n),()=>{const i=a.indexOf(n);i!==-1&&a.splice(i,1)}}$set(e){this.$$set&&!b(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const P="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(P);export{F as S,D as a,Z as b,X as c,z as d,M as e,W as g,A as i,L as m,Y as t};
